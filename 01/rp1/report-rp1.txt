提出課題：rp1
学籍番号：724A0068
　　氏名：中村匠吾

[演習内容]
1. 実行結果
  java rp01_B1 の実行結果をここに貼り付けること．
  rp1-result.txt は別ファイルで添付

  Step 2: 検討１ における，４つの実行結果のうち count のコマンド実行時に
    得られる compareCount の表示部分を貼り付けること
    $ java Ex01_L1 100.txt 100s.txt
    compareCount: 5050
    $ java Ex01_L1 2913.txt 2913s.txt
    compareCount: 4244241
    $ java Rp01_B1 100.txt 100s.txt
    compareCount: 762
    $ java Rp01_B1 2913.txt 2913s.txt
    compareCount: 1474987

  Step 2: 検討２ における，４つの実行結果のうち count のコマンド実行時に
    得られる compareCount の表示部分を貼り付けること
    $ java Ex01_L1 100r.txt 100s.txt
    compareCount: 5050
    $ java Ex01_L1 2913r.txt 2913s.txt
    compareCount: 4244241
    $ java Rp01_B1 100r.txt 100s.txt
    compareCount: 3142
    $ java Rp01_B1 2913r.txt 2913s.txt
    compareCount: 2081708

2. 検討事項
  [検討１] 線形探索と二分探索の 探索 の効率に関する検討をせよ
    探索の効率は線型探索よりも二分探索のほうが良いと考えられる．
    線形探索は，データの配列の大きさに応じてcompareCountの数値は大きくなると考えられる．
    それに比べ，二分探索は探索を1回行うごとに探索範囲が半減するので，同じデータの配列ではcompareCountの数値は線形探索よりも大きくなりづらいと考えられる．

  [検討２] 線形探索と二分探索の 登録＋探索 の効率に関する検討をせよ
    探索のみの効率と登録＋探索の効率を線型探索と二分探索のそれぞれについて比較すると，線形探索は登録の作業が増えてもcompareCountの数値は変わらないのに対して，二分探索は新規データを登録するごとにデータの配列を昇順に並べ替えする必要があるため登録＋探索の場合探索のみの場合よりもcompareCountの数値が大きくなると考えられる．

[感想・アンケート]
3. なにかあれば

[参考文献・謝辞]
4. 参考文献

5. 謝辞
